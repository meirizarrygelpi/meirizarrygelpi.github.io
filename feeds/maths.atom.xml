<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>M.E. Irizarry-Gelpí</title><link href="http://meirizarrygelpi.github.io/" rel="alternate"></link><link href="http://meirizarrygelpi.github.io/feeds/maths.atom.xml" rel="self"></link><id>http://meirizarrygelpi.github.io/</id><updated>2015-12-14T00:00:00-05:00</updated><entry><title>Brackets for Cubic 3-Arrays</title><link href="http://meirizarrygelpi.github.io/posts/2015/Dec/three-brackets/" rel="alternate"></link><updated>2015-12-14T00:00:00-05:00</updated><author><name>M.E. Irizarry-Gelpí</name></author><id>tag:meirizarrygelpi.github.io,2015-12-14:posts/2015/Dec/three-brackets/</id><summary type="html">&lt;p&gt;Given two square 2-arrays &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt; with the same size, the anticommutator &lt;span class="math"&gt;\(\left\lbrace \mathbf{A}, \mathbf{B} \right\rbrace\)&lt;/span&gt; is defined as
&lt;/p&gt;
&lt;div class="math"&gt;$$ \left\lbrace \mathbf{A}, \mathbf{B} \right\rbrace \equiv \operatorname{mul}_{2}{\left( \mathbf{A}, \mathbf{B} \right)} + \operatorname{mul}_{2}{\left( \mathbf{B}, \mathbf{A} \right)}; $$&lt;/div&gt;
&lt;p&gt;
and the commutator &lt;span class="math"&gt;\(\left[ \mathbf{A}, \mathbf{B} \right]\)&lt;/span&gt; is defined as
&lt;/p&gt;
&lt;div class="math"&gt;$$ \left[ \mathbf{A}, \mathbf{B} \right] \equiv \operatorname{mul}_{2}{\left( \mathbf{A}, \mathbf{B} \right)} - \operatorname{mul}_{2}{\left( \mathbf{B}, \mathbf{A} \right)}. $$&lt;/div&gt;
&lt;p&gt;
Since &lt;span class="math"&gt;\(\left\lbrace \mathbf{A}, \mathbf{B} \right\rbrace = \left\lbrace \mathbf{B}, \mathbf{A} \right\rbrace\)&lt;/span&gt;, the anticommutator can also be called the &lt;strong&gt;symmetric 2-bracket&lt;/strong&gt;. Similarly, since &lt;span class="math"&gt;\(\left[ \mathbf{A}, \mathbf{B} \right] = -\left[ \mathbf{B}, \mathbf{A} \right]\)&lt;/span&gt;, the commutator can also be called the &lt;strong&gt;alternating 2-bracket&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The symmetric bracket for square 2-arrays can be viewed as the sum of both possible permutations of the inputs for the 2-product. Similarly, the alternating bracket can be viewed as the sum of both possible permutations of the inputs for the 2-product weighted by the sign of the permutation. The &lt;a href="http://meirizarrygelpi.github.io/posts/2015/May/triangle-product-3-arrays/"&gt;triangle product for 3-arrays&lt;/a&gt; takes three inputs, so there are six permutations. Given three cubic 3-arrays with the same size, the &lt;strong&gt;symmetric 3-bracket&lt;/strong&gt; &lt;span class="math"&gt;\(\left\lbrace \mathbf{A}, \mathbf{B}, \mathbf{C} \right\rbrace\)&lt;/span&gt; is defined as
&lt;/p&gt;
&lt;div class="math"&gt;$$ \left\lbrace \mathbf{A}, \mathbf{B}, \mathbf{C} \right\rbrace \equiv \operatorname{mul}_{3}{\left( \mathbf{A}, \mathbf{B}, \mathbf{C} \right)} + \operatorname{mul}_{3}{\left( \mathbf{B}, \mathbf{C}, \mathbf{A} \right)} + \operatorname{mul}_{3}{\left( \mathbf{C}, \mathbf{A}, \mathbf{B} \right)} + \operatorname{mul}_{3}{\left( \mathbf{C}, \mathbf{B}, \mathbf{A} \right)} + \operatorname{mul}_{3}{\left( \mathbf{B}, \mathbf{A}, \mathbf{C} \right)} + \operatorname{mul}_{3}{\left( \mathbf{A}, \mathbf{C}, \mathbf{B} \right)}; $$&lt;/div&gt;
&lt;p&gt;
and the &lt;strong&gt;alternating 3-bracket&lt;/strong&gt; &lt;span class="math"&gt;\(\left[ \mathbf{A}, \mathbf{B}, \mathbf{C} \right]\)&lt;/span&gt; is defined as
&lt;/p&gt;
&lt;div class="math"&gt;$$ \left[ \mathbf{A}, \mathbf{B}, \mathbf{C} \right] \equiv \operatorname{mul}_{3}{\left( \mathbf{A}, \mathbf{B}, \mathbf{C} \right)} + \operatorname{mul}_{3}{\left( \mathbf{B}, \mathbf{C}, \mathbf{A} \right)} + \operatorname{mul}_{3}{\left( \mathbf{C}, \mathbf{A}, \mathbf{B} \right)} - \operatorname{mul}_{3}{\left( \mathbf{C}, \mathbf{B}, \mathbf{A} \right)} - \operatorname{mul}_{3}{\left( \mathbf{B}, \mathbf{A}, \mathbf{C} \right)} - \operatorname{mul}_{3}{\left( \mathbf{A}, \mathbf{C}, \mathbf{B} \right)}. $$&lt;/div&gt;
&lt;p&gt;
Note that
&lt;/p&gt;
&lt;div class="math"&gt;$$ \left\lbrace \mathbf{A}, \mathbf{B}, \mathbf{C} \right\rbrace = \left\lbrace \mathbf{B}, \mathbf{C}, \mathbf{A} \right\rbrace = \left\lbrace \mathbf{C}, \mathbf{A}, \mathbf{B} \right\rbrace = \left\lbrace \mathbf{C}, \mathbf{B}, \mathbf{A} \right\rbrace = \left\lbrace \mathbf{B}, \mathbf{A}, \mathbf{C} \right\rbrace = \left\lbrace \mathbf{A}, \mathbf{C}, \mathbf{B} \right\rbrace; $$&lt;/div&gt;
&lt;p&gt;
and
&lt;/p&gt;
&lt;div class="math"&gt;$$ \left[ \mathbf{A}, \mathbf{B}, \mathbf{C} \right] = \left[ \mathbf{B}, \mathbf{C}, \mathbf{A} \right] = \left[ \mathbf{C}, \mathbf{A}, \mathbf{B} \right] = -\left[ \mathbf{C}, \mathbf{B}, \mathbf{A} \right] = -\left[ \mathbf{B}, \mathbf{A}, \mathbf{C} \right] = -\left[ \mathbf{A}, \mathbf{C}, \mathbf{B} \right]. $$&lt;/div&gt;
&lt;p&gt;
Thus, unlike the alternating 2-bracket, the alternating 3-bracket is cyclic.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="three-array"></category></entry><entry><title>NumPy Implementation of the Triangle Product</title><link href="http://meirizarrygelpi.github.io/posts/2015/Dec/numpy-triangle-product/" rel="alternate"></link><updated>2015-12-13T00:00:00-05:00</updated><author><name>M.E. Irizarry-Gelpí</name></author><id>tag:meirizarrygelpi.github.io,2015-12-13:posts/2015/Dec/numpy-triangle-product/</id><summary type="html">&lt;p&gt;In this post I will discuss an implementation of the &lt;a href="http://meirizarrygelpi.github.io/posts/2015/May/triangle-product-3-arrays/"&gt;triangle product for 3-arrays&lt;/a&gt; in NumPy. You start by importing and setting the seed of the random number generator:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;itertools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;

&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A 3-array with random integer entries between 0 and 9, and size &lt;span class="math"&gt;\(\left(2, 3, 4\right)\)&lt;/span&gt; can be obtain with &lt;code&gt;random.random_integers(0, 9, (2, 3, 4))&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Given three 3-arrays &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt;, the triangle product can be implemented by the function &lt;code&gt;mul_3&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;mul_3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
    &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
    &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;
    &lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
        &lt;span class="n"&gt;P&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;xrange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;D&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a very yanky implementation, since it implicitly assumes that the size of the three input arrays are such that the triangle product exists. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_integers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;B&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_integers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_integers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mul_3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here &lt;code&gt;A&lt;/code&gt; has size &lt;span class="math"&gt;\(\left(2, 3, 4\right)\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;B&lt;/code&gt; has size &lt;span class="math"&gt;\(\left(3, 2, 5\right)\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;C&lt;/code&gt; has size &lt;span class="math"&gt;\(\left(4, 5, 2\right)\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and &lt;code&gt;D&lt;/code&gt; has size &lt;span class="math"&gt;\(\left(2, 2, 2\right)\)&lt;/span&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt; &lt;span class="mf"&gt;2206.&lt;/span&gt;  &lt;span class="mf"&gt;2374.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;3832.&lt;/span&gt;  &lt;span class="mf"&gt;3985.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;3386.&lt;/span&gt;  &lt;span class="mf"&gt;3821.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;5417.&lt;/span&gt;  &lt;span class="mf"&gt;5907.&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now lets consider three cubic 3-arrays with the same size:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;

&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_integers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;Y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_integers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random_integers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can compute six triangle products corresponding to the six possible permutations of the inputs:
&lt;/p&gt;
&lt;div class="math"&gt;$$ \operatorname{mul}_{3}\left(\mathbf{X}, \mathbf{Y}, \mathbf{Z} \right), \qquad \operatorname{mul}_{3}\left(\mathbf{Y}, \mathbf{Z}, \mathbf{X} \right), \qquad \operatorname{mul}_{3}\left(\mathbf{Z}, \mathbf{X}, \mathbf{Y} \right), \qquad \operatorname{mul}_{3}\left(\mathbf{Z}, \mathbf{Y}, \mathbf{X} \right), \qquad \operatorname{mul}_{3}\left(\mathbf{Y}, \mathbf{X}, \mathbf{Z} \right), \qquad \operatorname{mul}_{3}\left(\mathbf{X}, \mathbf{Z}, \mathbf{Y} \right). $$&lt;/div&gt;
&lt;p&gt;
Each of these products yields a different 3-array. Explicitly, &lt;code&gt;mul_3(X, Y, Z)&lt;/code&gt; gives:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt; &lt;span class="mf"&gt;2917.&lt;/span&gt;  &lt;span class="mf"&gt;3313.&lt;/span&gt;  &lt;span class="mf"&gt;1870.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2174.&lt;/span&gt;  &lt;span class="mf"&gt;2617.&lt;/span&gt;  &lt;span class="mf"&gt;1412.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;3773.&lt;/span&gt;  &lt;span class="mf"&gt;4375.&lt;/span&gt;  &lt;span class="mf"&gt;2698.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;2658.&lt;/span&gt;  &lt;span class="mf"&gt;2780.&lt;/span&gt;  &lt;span class="mf"&gt;1955.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2173.&lt;/span&gt;  &lt;span class="mf"&gt;2202.&lt;/span&gt;  &lt;span class="mf"&gt;1575.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;3498.&lt;/span&gt;  &lt;span class="mf"&gt;3706.&lt;/span&gt;  &lt;span class="mf"&gt;2647.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;3017.&lt;/span&gt;  &lt;span class="mf"&gt;4176.&lt;/span&gt;  &lt;span class="mf"&gt;1873.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2775.&lt;/span&gt;  &lt;span class="mf"&gt;3216.&lt;/span&gt;  &lt;span class="mf"&gt;1796.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;4315.&lt;/span&gt;  &lt;span class="mf"&gt;5436.&lt;/span&gt;  &lt;span class="mf"&gt;2937.&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;mul_3(Y, Z, X)&lt;/code&gt; gives:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt; &lt;span class="mf"&gt;2268.&lt;/span&gt;  &lt;span class="mf"&gt;2044.&lt;/span&gt;  &lt;span class="mf"&gt;4254.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2243.&lt;/span&gt;  &lt;span class="mf"&gt;1942.&lt;/span&gt;  &lt;span class="mf"&gt;3578.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1716.&lt;/span&gt;  &lt;span class="mf"&gt;1550.&lt;/span&gt;  &lt;span class="mf"&gt;3384.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;2904.&lt;/span&gt;  &lt;span class="mf"&gt;2824.&lt;/span&gt;  &lt;span class="mf"&gt;5646.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2578.&lt;/span&gt;  &lt;span class="mf"&gt;1982.&lt;/span&gt;  &lt;span class="mf"&gt;4482.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1880.&lt;/span&gt;  &lt;span class="mf"&gt;2172.&lt;/span&gt;  &lt;span class="mf"&gt;4745.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;3205.&lt;/span&gt;  &lt;span class="mf"&gt;1942.&lt;/span&gt;  &lt;span class="mf"&gt;4949.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2626.&lt;/span&gt;  &lt;span class="mf"&gt;1557.&lt;/span&gt;  &lt;span class="mf"&gt;3865.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2362.&lt;/span&gt;  &lt;span class="mf"&gt;1574.&lt;/span&gt;  &lt;span class="mf"&gt;3979.&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;mul_3(Z, X, Y)&lt;/code&gt; gives:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt; &lt;span class="mf"&gt;3406.&lt;/span&gt;  &lt;span class="mf"&gt;2945.&lt;/span&gt;  &lt;span class="mf"&gt;3785.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2895.&lt;/span&gt;  &lt;span class="mf"&gt;3055.&lt;/span&gt;  &lt;span class="mf"&gt;3398.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;4697.&lt;/span&gt;  &lt;span class="mf"&gt;4184.&lt;/span&gt;  &lt;span class="mf"&gt;5530.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;2469.&lt;/span&gt;  &lt;span class="mf"&gt;2436.&lt;/span&gt;  &lt;span class="mf"&gt;3299.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2165.&lt;/span&gt;  &lt;span class="mf"&gt;2311.&lt;/span&gt;  &lt;span class="mf"&gt;2924.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;3114.&lt;/span&gt;  &lt;span class="mf"&gt;2966.&lt;/span&gt;  &lt;span class="mf"&gt;4680.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;2491.&lt;/span&gt;  &lt;span class="mf"&gt;2186.&lt;/span&gt;  &lt;span class="mf"&gt;2813.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2238.&lt;/span&gt;  &lt;span class="mf"&gt;2178.&lt;/span&gt;  &lt;span class="mf"&gt;2546.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;3777.&lt;/span&gt;  &lt;span class="mf"&gt;3448.&lt;/span&gt;  &lt;span class="mf"&gt;4690.&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;mul_3(Z, Y, X)&lt;/code&gt; gives:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt; &lt;span class="mf"&gt;2826.&lt;/span&gt;  &lt;span class="mf"&gt;2768.&lt;/span&gt;  &lt;span class="mf"&gt;4890.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2035.&lt;/span&gt;  &lt;span class="mf"&gt;2209.&lt;/span&gt;  &lt;span class="mf"&gt;3423.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;3515.&lt;/span&gt;  &lt;span class="mf"&gt;3538.&lt;/span&gt;  &lt;span class="mf"&gt;6302.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;2528.&lt;/span&gt;  &lt;span class="mf"&gt;1922.&lt;/span&gt;  &lt;span class="mf"&gt;3687.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1987.&lt;/span&gt;  &lt;span class="mf"&gt;1414.&lt;/span&gt;  &lt;span class="mf"&gt;2816.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;3282.&lt;/span&gt;  &lt;span class="mf"&gt;2555.&lt;/span&gt;  &lt;span class="mf"&gt;5036.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;2446.&lt;/span&gt;  &lt;span class="mf"&gt;2282.&lt;/span&gt;  &lt;span class="mf"&gt;3737.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1475.&lt;/span&gt;  &lt;span class="mf"&gt;1930.&lt;/span&gt;  &lt;span class="mf"&gt;3222.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2569.&lt;/span&gt;  &lt;span class="mf"&gt;2898.&lt;/span&gt;  &lt;span class="mf"&gt;5009.&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;mul_3(Y, X, Z)&lt;/code&gt; gives:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt; &lt;span class="mf"&gt;2481.&lt;/span&gt;  &lt;span class="mf"&gt;2799.&lt;/span&gt;  &lt;span class="mf"&gt;1741.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2148.&lt;/span&gt;  &lt;span class="mf"&gt;2367.&lt;/span&gt;  &lt;span class="mf"&gt;1561.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;3692.&lt;/span&gt;  &lt;span class="mf"&gt;4362.&lt;/span&gt;  &lt;span class="mf"&gt;2781.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;3121.&lt;/span&gt;  &lt;span class="mf"&gt;3833.&lt;/span&gt;  &lt;span class="mf"&gt;2235.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2612.&lt;/span&gt;  &lt;span class="mf"&gt;3306.&lt;/span&gt;  &lt;span class="mf"&gt;1817.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;4718.&lt;/span&gt;  &lt;span class="mf"&gt;5600.&lt;/span&gt;  &lt;span class="mf"&gt;3897.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;2579.&lt;/span&gt;  &lt;span class="mf"&gt;3197.&lt;/span&gt;  &lt;span class="mf"&gt;1738.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2491.&lt;/span&gt;  &lt;span class="mf"&gt;2674.&lt;/span&gt;  &lt;span class="mf"&gt;1571.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;4290.&lt;/span&gt;  &lt;span class="mf"&gt;4765.&lt;/span&gt;  &lt;span class="mf"&gt;2884.&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;mul_3(X, Z, Y)&lt;/code&gt; gives:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;[[[&lt;/span&gt; &lt;span class="mf"&gt;2678.&lt;/span&gt;  &lt;span class="mf"&gt;2724.&lt;/span&gt;  &lt;span class="mf"&gt;4463.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1895.&lt;/span&gt;  &lt;span class="mf"&gt;2292.&lt;/span&gt;  &lt;span class="mf"&gt;3367.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1890.&lt;/span&gt;  &lt;span class="mf"&gt;2000.&lt;/span&gt;  &lt;span class="mf"&gt;3541.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;2439.&lt;/span&gt;  &lt;span class="mf"&gt;2352.&lt;/span&gt;  &lt;span class="mf"&gt;3538.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2421.&lt;/span&gt;  &lt;span class="mf"&gt;1986.&lt;/span&gt;  &lt;span class="mf"&gt;3397.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2128.&lt;/span&gt;  &lt;span class="mf"&gt;2008.&lt;/span&gt;  &lt;span class="mf"&gt;3253.&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

 &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="mf"&gt;2381.&lt;/span&gt;  &lt;span class="mf"&gt;3040.&lt;/span&gt;  &lt;span class="mf"&gt;4967.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;2234.&lt;/span&gt;  &lt;span class="mf"&gt;2564.&lt;/span&gt;  &lt;span class="mf"&gt;4066.&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="mf"&gt;1952.&lt;/span&gt;  &lt;span class="mf"&gt;2343.&lt;/span&gt;  &lt;span class="mf"&gt;3900.&lt;/span&gt;&lt;span class="p"&gt;]]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Thus, the 2-array notion of non-commutativity carries over to 3-arrays with the triangle product.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="three-array"></category></entry><entry><title>The Triangle Product for 3-Arrays</title><link href="http://meirizarrygelpi.github.io/posts/2015/May/triangle-product-3-arrays/" rel="alternate"></link><updated>2015-05-06T00:00:00-04:00</updated><author><name>M.E. Irizarry-Gelpí</name></author><id>tag:meirizarrygelpi.github.io,2015-05-06:posts/2015/May/triangle-product-3-arrays/</id><summary type="html">&lt;p&gt;Lately, I have been thinking about vectors, matrices and linear algebra. Indeed, I have been thinking about higher-dimensional generalizations of matrices, i.e. from two-dimensional arrays of numbers to three-dimensional arrays of numbers. This was triggered by reading &lt;a href="http://radar.oreilly.com/2015/03/lets-build-open-source-tensor-libraries-for-data-science.html"&gt;this blog post on tensors&lt;/a&gt;. In this post I will propose some generalizations to many of the properties of 2-arrays to the case of 3-arrays.&lt;/p&gt;
&lt;h2&gt;Orthotopic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-Arrays&lt;/h2&gt;
&lt;p&gt;A matrix is a rectangular array of elements. The 3-dimensional analog of a rectangle is the cuboid (also known as a 3-orthotope). Arranging elements into a cuboidal array yields what I will call a &lt;strong&gt;cuboidal 3-array&lt;/strong&gt;. A square matrix is a special case where the 2-array has a square shape. The 3-dimensional analog of a square is the cube. Arranging elements into a cubic array yields what I will call a &lt;strong&gt;cubic 3-array&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;More generally, the &lt;span class="math"&gt;\(k\)&lt;/span&gt;-dimensional analog of a rectangle is the &lt;span class="math"&gt;\(k\)&lt;/span&gt;-orthotope, and the &lt;span class="math"&gt;\(k\)&lt;/span&gt;-dimensional analog of a square is the &lt;span class="math"&gt;\(k\)&lt;/span&gt;-cube. Arranging elements into a &lt;span class="math"&gt;\(k\)&lt;/span&gt;-orthotopic array yields an orthotopic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-array. Similarly, arranging elements into a &lt;span class="math"&gt;\(k\)&lt;/span&gt;-cubic array yields a cubic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-array.&lt;/p&gt;
&lt;p&gt;The discussion below will have the following form: I will first introduce a property of a 2-array, then I will propose the analog of the property for 3-arrays, and finally I will comment on the general case for &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays.&lt;/p&gt;
&lt;h2&gt;Size&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;size&lt;/strong&gt; of a rectangular 2-array &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; is given by a 2-tuple of natural numbers:
&lt;/p&gt;
&lt;div class="math"&gt;$$\operatorname{size}{(\mathbf{A})} = (m, n) \in \mathbb{N}^{2}.$$&lt;/div&gt;
&lt;p&gt;
Here &lt;span class="math"&gt;\(m\)&lt;/span&gt; is the number of rows, and &lt;span class="math"&gt;\(n\)&lt;/span&gt; is the number of columns. I will refer to &lt;span class="math"&gt;\(m\)&lt;/span&gt; as the &lt;strong&gt;capacity&lt;/strong&gt; of the row-axis, and &lt;span class="math"&gt;\(n\)&lt;/span&gt; as the capacity of the column-axis. The set of all possible 2-arrays with size &lt;span class="math"&gt;\((m, n)\)&lt;/span&gt; is denoted by &lt;span class="math"&gt;\(\mathbb{A}_{m \times n}\)&lt;/span&gt;. The set of all possible rectangular 2-arrays is denoted by &lt;span class="math"&gt;\(\mathbb{A}_{2}\)&lt;/span&gt;. It is given by
&lt;/p&gt;
&lt;div class="math"&gt;$$\mathbb{A}_{2} = \bigcup_{(m, n) \in \mathbb{N}^{2}} \mathbb{A}_{m \times n}.$$&lt;/div&gt;
&lt;p&gt;
The set of square 2-arrays is a subset of this space. The 2-tuples of natural numbers can be arranged in a semi-infinite triangular array, similar to Pascal's triangle:
&lt;/p&gt;
&lt;div class="math"&gt;$$(1, 1)$$&lt;/div&gt;
&lt;div class="math"&gt;$$(1, 2) \quad (2, 1)$$&lt;/div&gt;
&lt;div class="math"&gt;$$(1, 3) \quad (2, 2) \quad (3, 1)$$&lt;/div&gt;
&lt;div class="math"&gt;$$(1, 4) \quad (2, 3) \quad (3, 2) \quad (4, 1)$$&lt;/div&gt;
&lt;div class="math"&gt;$$(1, 5) \quad (2, 4) \quad (3, 3) \quad (4, 2) \quad (5, 1)$$&lt;/div&gt;
&lt;p&gt;
The 2-tuple on top of the triangle describes the size of 2-arrays that correspond to scalars (plain numbers). The left outer edge of the triangle describes the size of 2-arrays that correspond to row vectors. Similarly, the right outer edge of the triangle describes the size of 2-arrays that correspond to column vectors. Finally, the internal triangle, with &lt;span class="math"&gt;\((2, 2)\)&lt;/span&gt; being on top, describes the size of rectangular 2-arrays.&lt;/p&gt;
&lt;p&gt;In a similar manner, the size of an orthotopic 3-array &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; is given by a 3-tuple of natural numbers:
&lt;/p&gt;
&lt;div class="math"&gt;$$\operatorname{size}{(\mathbf{A})} = (a, b, c) \in \mathbb{N}^{3}.$$&lt;/div&gt;
&lt;p&gt;
I will refer to &lt;span class="math"&gt;\(a\)&lt;/span&gt; as the capacity of the 1-axis, to &lt;span class="math"&gt;\(b\)&lt;/span&gt; as the capacity of the 2-axis, and &lt;span class="math"&gt;\(c\)&lt;/span&gt; as the capacity of the 3-axis. The set of all possible orthotopic 3-arrays with size &lt;span class="math"&gt;\((a, b, c)\)&lt;/span&gt; is denoted by &lt;span class="math"&gt;\(\mathbb{A}_{a \times b \times c}\)&lt;/span&gt;. The set of all possible orthotopic 3-arrays is denoted by &lt;span class="math"&gt;\(\mathbb{A}_{3}\)&lt;/span&gt;. It is given by
&lt;/p&gt;
&lt;div class="math"&gt;$$\mathbb{A}_{3} = \bigcup_{(a, b, c) \in \mathbb{N}^{3}} \mathbb{A}_{a \times b \times c}.$$&lt;/div&gt;
&lt;p&gt;
The set of cubic 3-arrays is a subset of this space. The 3-tuples of natural numbers can be arranged in a semi-infinite tetrahedral array, similar to Pascal's tetrahedron. The top vertex of this tetrahedron describes the size of 3-arrays that correspond to scalars. Each of the three edges from the top vertex correspond to the size of 3-arrays that correspond to vectors (three kinds now). Each of the three faces correspond to the size of 3-arrays that correspond to 2-arrays. The internal tetrahedron, with the 3-tuple &lt;span class="math"&gt;\((2, 2, 2)\)&lt;/span&gt; being on top, describes the size of orthotopic 3-arrays.&lt;/p&gt;
&lt;p&gt;More generally, the size of an orthotopic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-array &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; is given by a &lt;span class="math"&gt;\(k\)&lt;/span&gt;-tuple of natural numbers:
&lt;/p&gt;
&lt;div class="math"&gt;$$\operatorname{size}{(\mathbf{A})} = t = (n_{1}, n_{2}, \ldots, n_{k}) \in \mathbb{N}^{k}.$$&lt;/div&gt;
&lt;p&gt;
I will refer to &lt;span class="math"&gt;\(n_{j}\)&lt;/span&gt; as the capacity of the &lt;span class="math"&gt;\(j\)&lt;/span&gt;-axis. The set of all possible orthotopic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays with size &lt;span class="math"&gt;\(t\)&lt;/span&gt; is denoted by &lt;span class="math"&gt;\(\mathbb{A}_{t}\)&lt;/span&gt;. The set of all possible orthotopic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays is denoted by &lt;span class="math"&gt;\(\mathbb{A}_{k}\)&lt;/span&gt;. It is given by
&lt;/p&gt;
&lt;div class="math"&gt;$$\mathbb{A}_{k} = \bigcup_{t \in \mathbb{N}^{k}} \mathbb{A}_{t}.$$&lt;/div&gt;
&lt;p&gt;
The set of cubic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays is a subset of this space.&lt;/p&gt;
&lt;h2&gt;Addition&lt;/h2&gt;
&lt;p&gt;Given two rectangular 2-arrays &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt;, both with size &lt;span class="math"&gt;\((m, n)\)&lt;/span&gt;, the operation &lt;span class="math"&gt;\(\operatorname{add}_{2}(\mathbf{A}, \mathbf{B})\)&lt;/span&gt; returns a third 2-array with size &lt;span class="math"&gt;\((m, n)\)&lt;/span&gt;. Thus,
&lt;/p&gt;
&lt;div class="math"&gt;$$\operatorname{add}_{2} : \mathbb{A}_{m \times n} \times \mathbb{A}_{m \times n} \longrightarrow \mathbb{A}_{m \times n}.$$&lt;/div&gt;
&lt;p&gt;
The elements of the 2-array &lt;span class="math"&gt;\(\operatorname{add}_{2}(\mathbf{A}, \mathbf{B})\)&lt;/span&gt; are found by element-wise adding the elements of &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; with the elements of &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt;. The addition operation on 2-arrays is commutative:
&lt;/p&gt;
&lt;div class="math"&gt;$$\operatorname{add}_{2}(\mathbf{A}, \mathbf{B}) = \operatorname{add}_{2}(\mathbf{B}, \mathbf{A}).$$&lt;/div&gt;
&lt;p&gt;
It is also associative:
&lt;/p&gt;
&lt;div class="math"&gt;$$\operatorname{add}_{2}(\operatorname{add}_{2}(\mathbf{A}, \mathbf{B}), \mathbf{C}) = \operatorname{add}_{2}(\mathbf{A}, \operatorname{add}_{2}(\mathbf{B}, \mathbf{C})).$$&lt;/div&gt;
&lt;p&gt;
In a very similar manner, you can define the operation &lt;span class="math"&gt;\(\operatorname{add}_{3}\)&lt;/span&gt;, and more generally &lt;span class="math"&gt;\(\operatorname{add}_{k}\)&lt;/span&gt; for adding two &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays of the same size. These operations are also associative and commutative.&lt;/p&gt;
&lt;h2&gt;Cayley Transposition&lt;/h2&gt;
&lt;p&gt;A rectangular 2-array &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; with size &lt;span class="math"&gt;\((m, n)\)&lt;/span&gt; has a total of &lt;span class="math"&gt;\(mn\)&lt;/span&gt; elements. These can be rearranged into a rectangular 2-array &lt;span class="math"&gt;\(T(\mathbf{A})\)&lt;/span&gt; with size &lt;span class="math"&gt;\((n, m)\)&lt;/span&gt; by swapping the row-axis with the column-axis. This operation is called the &lt;strong&gt;Cayley transposition&lt;/strong&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$T: \mathbb{A}_{m \times n} \longrightarrow \mathbb{A}_{n \times m}.$$&lt;/div&gt;
&lt;p&gt;
The Cayley transposition is an &lt;strong&gt;involution&lt;/strong&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$T \circ T = I,$$&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\(I\)&lt;/span&gt; is the identity operation. The operations &lt;span class="math"&gt;\(I\)&lt;/span&gt; and &lt;span class="math"&gt;\(T\)&lt;/span&gt; form &lt;span class="math"&gt;\(S_{2}\)&lt;/span&gt;, the &lt;strong&gt;symmetric group&lt;/strong&gt; of degree 2.&lt;/p&gt;
&lt;p&gt;Similarly, an orthotopic 3-array with size &lt;span class="math"&gt;\((a, b, c)\)&lt;/span&gt; has a total of &lt;span class="math"&gt;\(abc\)&lt;/span&gt; elements. These can be rearranged into five other orthotopic 3-arrays, corresponding to the &lt;span class="math"&gt;\(3! - 1 = 5\)&lt;/span&gt; permutations of its three axes. Thus, there are five Cayley transpositions:
&lt;/p&gt;
&lt;div class="math"&gt;$$T_{1}: \mathbb{A}_{a \times b \times c} \longrightarrow \mathbb{A}_{b \times a \times c},$$&lt;/div&gt;
&lt;div class="math"&gt;$$T_{2}: \mathbb{A}_{a \times b \times c} \longrightarrow \mathbb{A}_{a \times c \times b},$$&lt;/div&gt;
&lt;div class="math"&gt;$$T_{3}: \mathbb{A}_{a \times b \times c} \longrightarrow \mathbb{A}_{c \times b \times a},$$&lt;/div&gt;
&lt;div class="math"&gt;$$T_{4}: \mathbb{A}_{a \times b \times c} \longrightarrow \mathbb{A}_{c \times a \times b},$$&lt;/div&gt;
&lt;div class="math"&gt;$$T_{5}: \mathbb{A}_{a \times b \times c} \longrightarrow \mathbb{A}_{b \times c \times a}.$$&lt;/div&gt;
&lt;p&gt;
Three of these are involutions:
&lt;/p&gt;
&lt;div class="math"&gt;$$T_{1} \circ T_{1} = I, \quad T_{2} \circ T_{2} = I, \quad T_{3} \circ T_{3} = I.$$&lt;/div&gt;
&lt;p&gt;
The other two are each other's inverses:
&lt;/p&gt;
&lt;div class="math"&gt;$$T_{4} \circ T_{5} = I, \quad T_{5} \circ T_{4} = I.$$&lt;/div&gt;
&lt;p&gt;
The five Cayley transpositions and the identity operation form &lt;span class="math"&gt;\(S_{3}\)&lt;/span&gt;, the symmetric group of degree 3.&lt;/p&gt;
&lt;p&gt;More generally, an orthotopic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-array can be rearranged into &lt;span class="math"&gt;\(k! - 1\)&lt;/span&gt; different orthotopic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays. Thus, you will have &lt;span class="math"&gt;\(k! - 1\)&lt;/span&gt; Cayley transpositions &lt;span class="math"&gt;\(T_{j}\)&lt;/span&gt;. Only &lt;span class="math"&gt;\(k\)&lt;/span&gt; of these are involutions. Together with the identity element, the &lt;span class="math"&gt;\(k! - 1\)&lt;/span&gt; Cayley transpositions form &lt;span class="math"&gt;\(S_{k}\)&lt;/span&gt;, the symmetric group of degree &lt;span class="math"&gt;\(k\)&lt;/span&gt;.&lt;/p&gt;
&lt;h2&gt;Complex Conjugation&lt;/h2&gt;
&lt;p&gt;If a rectangular 2-array &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; has complex elements, then the &lt;strong&gt;complex conjugation&lt;/strong&gt; operation &lt;span class="math"&gt;\(C\)&lt;/span&gt; returns a 2-array &lt;span class="math"&gt;\(C(\mathbf{A})\)&lt;/span&gt; with the same size as &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt;, but with element-wise complex conjugation. This operation is an involution:
&lt;/p&gt;
&lt;div class="math"&gt;$$C \circ C = I$$&lt;/div&gt;
&lt;p&gt;
The operation &lt;span class="math"&gt;\(C\)&lt;/span&gt; together with the identity operation form &lt;span class="math"&gt;\(S_{2}\)&lt;/span&gt;, the symmetric group of degree 2.&lt;/p&gt;
&lt;p&gt;Complex conjugation can be defined in the same way for 3-arrays, and also for &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays.&lt;/p&gt;
&lt;h2&gt;Hermite Transposition&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;Hermite transposition&lt;/strong&gt; operation &lt;span class="math"&gt;\(H\)&lt;/span&gt; on a rectangular 2-array &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; is defined by composing complex conjugation with Cayley transposition:
&lt;/p&gt;
&lt;div class="math"&gt;$$H(\mathbf{A}) = C \circ T(\mathbf{A}) = T \circ C(\mathbf{A}).$$&lt;/div&gt;
&lt;p&gt;
Hermite transposition on a 2-array is an involution. The operations &lt;span class="math"&gt;\(C\)&lt;/span&gt;, &lt;span class="math"&gt;\(T\)&lt;/span&gt;, &lt;span class="math"&gt;\(H\)&lt;/span&gt;, and the identity form the group &lt;span class="math"&gt;\(S_{2} \times S_{2}\)&lt;/span&gt;, which is equivalent to the &lt;strong&gt;dihedral group&lt;/strong&gt; of order 4.&lt;/p&gt;
&lt;p&gt;There are five Cayley transpositions on a 3-array, so there are five Hermite transpositions:
&lt;/p&gt;
&lt;div class="math"&gt;$$H_{j} = C \circ T_{j} = T_{j} \circ C.$$&lt;/div&gt;
&lt;p&gt;
Only three of these are involutions. The composition of two distinct Hermite transpositions is a Cayley transposition. The five Hermite transpositions, together with the five Cayley transpositions, &lt;span class="math"&gt;\(C\)&lt;/span&gt; and the identity operation form the group &lt;span class="math"&gt;\(S_{3} \times S_{2}\)&lt;/span&gt;, which is equivalent to the dihedral group of order 12.&lt;/p&gt;
&lt;p&gt;A similar story holds for &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays: you have &lt;span class="math"&gt;\(k! - 1\)&lt;/span&gt; Hermite transpositions, some of them are involutions, and together with the &lt;span class="math"&gt;\(k! - 1\)&lt;/span&gt; Cayley transpositions, the complex conjugation operation, and the identity operation they form the group &lt;span class="math"&gt;\(S_{k} \times S_{2}\)&lt;/span&gt; with &lt;span class="math"&gt;\(2 (k !)\)&lt;/span&gt; elements.&lt;/p&gt;
&lt;h2&gt;Multiplication&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;2-array multiplication&lt;/strong&gt; operation &lt;span class="math"&gt;\(\operatorname{mul}_{2}\)&lt;/span&gt; takes a 2-array &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; with size &lt;span class="math"&gt;\((m, p)\)&lt;/span&gt;, and a 2-array &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt; with size &lt;span class="math"&gt;\((p, n)\)&lt;/span&gt;, and returns a 2-array &lt;span class="math"&gt;\(\operatorname{mul}_{2}{(\mathbf{A}, \mathbf{B})}\)&lt;/span&gt; with size &lt;span class="math"&gt;\((m, n)\)&lt;/span&gt;. That is,
&lt;/p&gt;
&lt;div class="math"&gt;$$\operatorname{mul}_{2}: \mathbb{A}_{m \times p} \times \mathbb{A}_{p \times n} \longrightarrow \mathbb{A}_{m \times n}.$$&lt;/div&gt;
&lt;p&gt;
If the elements of &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; are denoted by &lt;span class="math"&gt;\(A_{\alpha \mu}\)&lt;/span&gt;, the elements of &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt; are denoted by &lt;span class="math"&gt;\(B_{\mu \beta}\)&lt;/span&gt;, and the elements of &lt;span class="math"&gt;\(\mathbf{C} = \operatorname{mul}_{2}{(\mathbf{A}, \mathbf{B})}\)&lt;/span&gt; are denoted by &lt;span class="math"&gt;\(C_{\alpha \beta}\)&lt;/span&gt;, then
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{\alpha \beta} = \sum_{\mu = 1}^{p} A_{\alpha \mu} B_{\mu \beta}.$$&lt;/div&gt;
&lt;p&gt;
That is, the elements of &lt;span class="math"&gt;\(\mathbf{C}\)&lt;/span&gt; are found by contracting the column-axis of &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; with the row-axis of &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt;. It is for this reason that the capacity of the column-axis of &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; must equal the capacity of the row-axis of &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The multiplication operation satisfies the property
&lt;/p&gt;
&lt;div class="math"&gt;$$T(\operatorname{mul}_{2}{(\mathbf{A}, \mathbf{B})}) = \operatorname{mul}_{2}{(T(\mathbf{B}), T(\mathbf{A}))}.$$&lt;/div&gt;
&lt;p&gt;
This is how you distribute the Cayley transposition operation on a product of 2-arrays.&lt;/p&gt;
&lt;p&gt;One way to motivate the 2-array multiplication operation is by viewing each rectangular 2-array as a line with two endpoints (i.e. a 1-simplex): the row-axis and the column-axis. The operation &lt;span class="math"&gt;\(\operatorname{mul}_{2}\)&lt;/span&gt; takes two lines and concatenates them to return another line. The concatenation contracts the column-axis of the first 2-array with the row-axis of the second 2-array.&lt;/p&gt;
&lt;p&gt;I want the 3-array multiplication operation &lt;span class="math"&gt;\(\operatorname{mul}_{3}\)&lt;/span&gt; to return a 3-array. A 3-array has three axes. Viewing each orthotopic 3-array as a triangle (i.e. a 2-simplex), it appears one needs to concatenate three triangles to return another triangle. This leads me to introduce the &lt;strong&gt;triangle product&lt;/strong&gt; operation, which is a &lt;em&gt;ternary&lt;/em&gt; operation:
&lt;/p&gt;
&lt;div class="math"&gt;$$\operatorname{mul}_{3}: \mathbb{A}_{a \times p \times q} \times \mathbb{A}_{p \times b \times r} \times \mathbb{A}_{q \times r \times c} \longrightarrow \mathbb{A}_{a \times b \times c}.$$&lt;/div&gt;
&lt;p&gt;
Let &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; be a 3-array with size &lt;span class="math"&gt;\((a, p, q)\)&lt;/span&gt;, &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt; be a 3-array with size &lt;span class="math"&gt;\((p, b, r)\)&lt;/span&gt;, and &lt;span class="math"&gt;\(\mathbf{C}\)&lt;/span&gt; be a 3-array with size &lt;span class="math"&gt;\((q, r, c)\)&lt;/span&gt;. The triangle product &lt;span class="math"&gt;\(\mathbf{D} = \operatorname{mul}_{3}{(\mathbf{A}, \mathbf{B}, \mathbf{C})}\)&lt;/span&gt; is a 3-array with size &lt;span class="math"&gt;\((a, b, c)\)&lt;/span&gt;. The elements of &lt;span class="math"&gt;\(\mathbf{D}\)&lt;/span&gt; are given by
&lt;/p&gt;
&lt;div class="math"&gt;$$D_{\alpha \beta \gamma} = \sum_{\mu = 1}^{p} \sum_{\nu = 1}^{q} \sum_{\rho = 1}^{r} A_{\alpha \mu \nu} B_{\mu \beta \rho} C_{\nu \rho \gamma}.$$&lt;/div&gt;
&lt;p&gt;
Here are more details:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The 1-axis of &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; survives as the 1-axis of &lt;span class="math"&gt;\(\mathbf{D}\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;The 2-axis of &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; is contracted with the 1-axis of &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;The 3-axis of &lt;span class="math"&gt;\(\mathbf{A}\)&lt;/span&gt; is contracted with the 1-axis of &lt;span class="math"&gt;\(\mathbf{C}\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;The 2-axis of &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt; survives as the 2-axis of &lt;span class="math"&gt;\(\mathbf{D}\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;The 3-axis of &lt;span class="math"&gt;\(\mathbf{B}\)&lt;/span&gt; is contracted with the 2-axis of &lt;span class="math"&gt;\(\mathbf{C}\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;The 3-axis of &lt;span class="math"&gt;\(\mathbf{C}\)&lt;/span&gt; survives as the 3-axis of &lt;span class="math"&gt;\(\mathbf{D}\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The triangle product satisfies these properties:
&lt;/p&gt;
&lt;div class="math"&gt;$$T_{1}(\operatorname{mul}_{3}{(\mathbf{A}, \mathbf{B}, \mathbf{C})}) = \operatorname{mul}_{3}{(T_{1}(\mathbf{B}), T_{1}(\mathbf{A}), T_{1}(\mathbf{C}))},$$&lt;/div&gt;
&lt;div class="math"&gt;$$T_{2}(\operatorname{mul}_{3}{(\mathbf{A}, \mathbf{B}, \mathbf{C})}) = \operatorname{mul}_{3}{(T_{2}(\mathbf{A}), T_{2}(\mathbf{C}), T_{2}(\mathbf{B}))},$$&lt;/div&gt;
&lt;div class="math"&gt;$$T_{3}(\operatorname{mul}_{3}{(\mathbf{A}, \mathbf{B}, \mathbf{C})}) = \operatorname{mul}_{3}{(T_{3}(\mathbf{C}), T_{3}(\mathbf{B}), T_{3}(\mathbf{A}))},$$&lt;/div&gt;
&lt;div class="math"&gt;$$T_{4}(\operatorname{mul}_{3}{(\mathbf{A}, \mathbf{B}, \mathbf{C})}) = \operatorname{mul}_{3}{(T_{4}(\mathbf{C}), T_{4}(\mathbf{A}), T_{4}(\mathbf{B}))},$$&lt;/div&gt;
&lt;div class="math"&gt;$$T_{5}(\operatorname{mul}_{3}{(\mathbf{A}, \mathbf{B}, \mathbf{C})}) = \operatorname{mul}_{3}{(T_{5}(\mathbf{B}), T_{5}(\mathbf{C}), T_{5}(\mathbf{A}))}.$$&lt;/div&gt;
&lt;p&gt;
This is how you distribute the Cayley transpositions on a triangle product of 3-arrays. These are natural generalizations of the property for 2-arrays.&lt;/p&gt;
&lt;p&gt;Presumably, for the case of &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays, the multiplication operation &lt;span class="math"&gt;\(\operatorname{mul}_{k}\)&lt;/span&gt; takes &lt;span class="math"&gt;\(k\)&lt;/span&gt; orthotopic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-arrays and returns another orthotopic &lt;span class="math"&gt;\(k\)&lt;/span&gt;-array. The contraction is done in such a way as to preserve the &lt;span class="math"&gt;\(k\)&lt;/span&gt;-simplex structure.&lt;/p&gt;
&lt;p&gt;I will explore more properties of the triangle product in a future post.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="three-array"></category></entry><entry><title>Tesseracts and Pentatopes</title><link href="http://meirizarrygelpi.github.io/posts/2015/Apr/tesseracts-and-pentatopes/" rel="alternate"></link><updated>2015-04-17T00:00:00-04:00</updated><author><name>M.E. Irizarry-Gelpí</name></author><id>tag:meirizarrygelpi.github.io,2015-04-17:posts/2015/Apr/tesseracts-and-pentatopes/</id><summary type="html">&lt;p&gt;Recall the factorial function &lt;span class="math"&gt;\(n!\)&lt;/span&gt;
&lt;/p&gt;
&lt;div class="math"&gt;$$n! = \prod_{k = 1}^{n}k$$&lt;/div&gt;
&lt;p&gt;
and the binomial coefficients &lt;span class="math"&gt;\(B(n, k)\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$B(n, k) \equiv \frac{n!}{(n - k)! k!}$$&lt;/div&gt;
&lt;p&gt;
With the binomial coefficients, you can define the &lt;span class="math"&gt;\(n\)&lt;/span&gt;-th &lt;span class="math"&gt;\(k\)&lt;/span&gt;-simplex number &lt;span class="math"&gt;\(S_{k}(n)\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$S_{k}(n) \equiv B(n - k + 1, k)$$&lt;/div&gt;
&lt;p&gt;
When &lt;span class="math"&gt;\(k = 1\)&lt;/span&gt;, you have the &lt;strong&gt;line&lt;/strong&gt; numbers:
&lt;/p&gt;
&lt;div class="math"&gt;$$S_{1}(n) = n$$&lt;/div&gt;
&lt;p&gt;
When &lt;span class="math"&gt;\(k = 2\)&lt;/span&gt;, you have the &lt;strong&gt;triangle&lt;/strong&gt; numbers:
&lt;/p&gt;
&lt;div class="math"&gt;$$S_{2}(n) = \frac{n (n + 1)}{2}$$&lt;/div&gt;
&lt;p&gt;
When &lt;span class="math"&gt;\(k = 3\)&lt;/span&gt;, you have the &lt;strong&gt;tetrahedron&lt;/strong&gt; numbers:
&lt;/p&gt;
&lt;div class="math"&gt;$$S_{3}(n) = \frac{n (n + 1)(n + 2)}{6}$$&lt;/div&gt;
&lt;p&gt;
When &lt;span class="math"&gt;\(k = 4\)&lt;/span&gt;, you have the &lt;strong&gt;pentatope&lt;/strong&gt; numbers:
&lt;/p&gt;
&lt;div class="math"&gt;$$S_{4}(n) = \frac{n (n + 1)(n + 2)(n + 3)}{24}$$&lt;/div&gt;
&lt;p&gt;
Besides the &lt;span class="math"&gt;\(k\)&lt;/span&gt;-simplex numbers, you also have the &lt;span class="math"&gt;\(n\)&lt;/span&gt;-th &lt;span class="math"&gt;\(k\)&lt;/span&gt;-cube number &lt;span class="math"&gt;\(C_{k}(n)\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{k}(n) = n^{k}$$&lt;/div&gt;
&lt;p&gt;
The cases &lt;span class="math"&gt;\(k = 2\)&lt;/span&gt;, &lt;span class="math"&gt;\(k = 3\)&lt;/span&gt;, and &lt;span class="math"&gt;\(k = 4\)&lt;/span&gt; are, respectively, the &lt;strong&gt;square&lt;/strong&gt;, &lt;strong&gt;cube&lt;/strong&gt;, and &lt;strong&gt;tesseract&lt;/strong&gt; numbers. The &lt;span class="math"&gt;\(n\)&lt;/span&gt;-th &lt;span class="math"&gt;\(k\)&lt;/span&gt;-cube number corresponds to the number of entries in a &lt;span class="math"&gt;\(k\)&lt;/span&gt;-array of size &lt;span class="math"&gt;\(n\)&lt;/span&gt;. For example, a 2-array of size &lt;span class="math"&gt;\(n\)&lt;/span&gt; is an &lt;span class="math"&gt;\(n \times n\)&lt;/span&gt; square matrix. I have been thinking about &lt;span class="math"&gt;\(k\)&lt;/span&gt;-simplex and &lt;span class="math"&gt;\(k\)&lt;/span&gt;-cube numbers lately because I have been thinking about square matrices and cubic hypermatrices.&lt;/p&gt;
&lt;p&gt;The &lt;span class="math"&gt;\(k\)&lt;/span&gt;-volume of a &lt;span class="math"&gt;\(k\)&lt;/span&gt;-cube and the &lt;span class="math"&gt;\(k\)&lt;/span&gt;-volume of a &lt;span class="math"&gt;\(k\)&lt;/span&gt;-simplex are related via:
&lt;/p&gt;
&lt;div class="math"&gt;$$\text{vol}(C_{k}) = k! \times \text{vol}(S_{k})$$&lt;/div&gt;
&lt;p&gt;
Trivially,
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{1}(n) = S_{1}(n)$$&lt;/div&gt;
&lt;p&gt;
That is, a 1-cube is also a 1-simplex. As a first nontrivial example, take &lt;span class="math"&gt;\(k = 2\)&lt;/span&gt;. A square can be divided into two triangles with the same area. You can translate this statement into a property of square matrices. An &lt;span class="math"&gt;\(n \times n\)&lt;/span&gt; square matrix has &lt;span class="math"&gt;\(n^{2}\)&lt;/span&gt; entries (its "area"). These &lt;span class="math"&gt;\(n^{2}\)&lt;/span&gt; entries can be divided into two identical triangular domains with &lt;span class="math"&gt;\(S_{2}(n - 1)\)&lt;/span&gt; entries, and one linear domain between the two triangles with &lt;span class="math"&gt;\(S_{1}(n)\)&lt;/span&gt; entries. Thus,
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{2}(n) = S_{1}(n) + 2 S_{2}(n - 1)$$&lt;/div&gt;
&lt;p&gt;
Equivalently, you can absorb the interface between the two triangles into one of them, and arrive at the result that the sum of two consecutive triangle numbers is a square number:
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{2}(n) = S_{2}(n) + S_{2}(n - 1)$$&lt;/div&gt;
&lt;p&gt;
But here the size of each triangular domain is different.&lt;/p&gt;
&lt;p&gt;Similarly, a cube can be divided into six tetrahedra with the same volume. You can translate this statement into a property of &lt;span class="math"&gt;\(n \times n \times n\)&lt;/span&gt; hypermatrices. An &lt;span class="math"&gt;\(n \times n \times n\)&lt;/span&gt; hypermatrix has &lt;span class="math"&gt;\(n^{3}\)&lt;/span&gt; entries (its "volume"). These entries can be divided into six identical tetrahedral domains with &lt;span class="math"&gt;\(S_{3}(n-2)\)&lt;/span&gt; entries, six identical triangular domains with &lt;span class="math"&gt;\(S_{2}(n-1)\)&lt;/span&gt; entries, and one linear domain with &lt;span class="math"&gt;\(S_{1}(n)\)&lt;/span&gt; entries. Thus,
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{3}(n) = S_{1}(n) + 6 S_{2}(n - 1) + 6 S_{3}(n - 2)$$&lt;/div&gt;
&lt;p&gt;
Since
&lt;/p&gt;
&lt;div class="math"&gt;$$S_{3}(n+1) = S_{2}(n+1) + S_{3}(n)$$&lt;/div&gt;
&lt;p&gt;
you can absorb the interface triangular domains into the tetrahedral domains.&lt;/p&gt;
&lt;p&gt;I tried to find the analogous result in four dimensions. Since &lt;span class="math"&gt;\(4! = 24\)&lt;/span&gt;, a tesseract can be divided into 24 identical pentatopes. Thus, you can imagine that
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{4}(n) = \ldots + 24 S_{4}(n - 3)$$&lt;/div&gt;
&lt;p&gt;
It took me some effort to find the full result:
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{4}(n) = S_{1}(n) + 14 S_{2}(n - 1) + 36 S_{3}(n - 2) + 24 S_{4}(n - 3)$$&lt;/div&gt;
&lt;p&gt;
That is, you can divide a tesseract array into one linear array, 14 triangular arrays, 36 tetrahedral arrays, and 24 pentatopic arrays. I found this by first writing
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{4}(n) = a S_{1}(n) + b S_{2}(n - 1) + c S_{3}(n - 2) + 24 S_{4}(n - 3)$$&lt;/div&gt;
&lt;p&gt;
and then solving the equation &lt;span class="math"&gt;\(C_{4}(n) - n^{4} = 0\)&lt;/span&gt;. Using this technique you can also show that
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{5}(n) = S_{1}(n) + 30 S_{2}(n - 1) + 150 S_{3}(n - 2) + 240 S_{4}(n - 3) + 120 S_{5}(n - 4)$$&lt;/div&gt;
&lt;p&gt;
That is, you can divide a 5-cube into a one 1-simplex array, 30 2-simplex arrays, 150 3-simplex arrays, 240 4-simplex arrays, and 120 5-simplex arrays.&lt;/p&gt;
&lt;p&gt;It seems that in general, you have
&lt;/p&gt;
&lt;div class="math"&gt;$$C_{k}(n) = \sum_{l = 1}^{k} N_{k}(l) S_{l}(n - l + 1)$$&lt;/div&gt;
&lt;p&gt;
For a long time I wondered if there is a neat expression for &lt;span class="math"&gt;\(N_{k}(l)\)&lt;/span&gt;. I have to confessed of being lazy and not actively trying to find &lt;span class="math"&gt;\(N_{k}(l)\)&lt;/span&gt; based on what I know of &lt;span class="math"&gt;\(C_{k}(n)\)&lt;/span&gt; and &lt;span class="math"&gt;\(S_{k}(n)\)&lt;/span&gt;. In the end, I rediscovered the &lt;a href="https://oeis.org/"&gt;Online Encyclopedia of Integer Sequences&lt;/a&gt; and searched "24, 36, 14, 1" there. The first hit is the sequence &lt;a href="https://oeis.org/A090582"&gt;A090582&lt;/a&gt;. After searching for "1, 14, 36, 24" I found the sequence &lt;a href="https://oeis.org/A019538"&gt;A019538&lt;/a&gt;. Both of these sequences are related to Stirling numbers of the second kind.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="geometry"></category></entry><entry><title>Cross-Ratio Versus Conformal Ratio</title><link href="http://meirizarrygelpi.github.io/posts/2015/Feb/cross-vs-conformal/" rel="alternate"></link><updated>2015-02-01T00:00:00-05:00</updated><author><name>M.E. Irizarry-Gelpí</name></author><id>tag:meirizarrygelpi.github.io,2015-02-01:posts/2015/Feb/cross-vs-conformal/</id><summary type="html">&lt;p&gt;I recently learned the difference between a cross-ratio invariant and a conformal ratio invariant, thanks to this &lt;a href="http://en.wikipedia.org/wiki/Cross-ratio"&gt;Wikipedia entry&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Cross-Ratio&lt;/h2&gt;
&lt;p&gt;The cross-ratio is a &lt;strong&gt;projective&lt;/strong&gt; invariant. Given the coordinates of four points on the complex plane, the &lt;strong&gt;cross-ratio&lt;/strong&gt; is defined as
&lt;/p&gt;
&lt;div class="math"&gt;$$P(1, 2, 3, 4) = \frac{(z_{1} - z_{3}) (z_{2} - z_{4})}{(z_{2} - z_{3}) (z_{1} - z_{4})} .$$&lt;/div&gt;
&lt;p&gt;
It is invariant under &lt;strong&gt;fractional linear transformations&lt;/strong&gt; of the form
&lt;/p&gt;
&lt;div class="math"&gt;$$ z \longrightarrow \frac{a z + b}{c z + d} .$$&lt;/div&gt;
&lt;p&gt;
There is always the arbitrariness of how to define the cross-ratio. After all, there are &lt;span class="math"&gt;\(4! = 24\)&lt;/span&gt; permutations of the coordinates, so you can argue that there are 24 possible cross-ratios for a given quartet of coordinates. However, note that if you swap two pairs you again obtain the same cross-ratio. That is,
&lt;/p&gt;
&lt;div class="math"&gt;$$P(1, 2, 3, 4) = P(2, 1, 4, 3) = P(3, 4, 1, 2) = P(4, 3, 2, 1) .$$&lt;/div&gt;
&lt;p&gt;
This means that the 24 permutations must split into six inequivalent classes, each with four permutations related by the above relation. Representatives of each of these six inequivalent classes are:
&lt;/p&gt;
&lt;div class="math"&gt;$$P(1, 2, 3, 4) = p \quad P(1, 2, 4, 3) = \frac{1}{p} \quad P(1, 3, 4, 2) = \frac{1}{1 - p} \quad P(1, 3, 2, 4) = 1 - p \quad P(1, 4, 3, 2) = \frac{p}{1 - p} \quad P(1, 4, 2, 3) = \frac{1 - p}{p} .$$&lt;/div&gt;
&lt;p&gt;
As you can see, once the value of &lt;span class="math"&gt;\(p\)&lt;/span&gt; is given, all possible permutations are fixed, so there is really &lt;strong&gt;one&lt;/strong&gt; independent cross-ratio for any given quartet of coordinates.&lt;/p&gt;
&lt;h2&gt;Conformal Ratio&lt;/h2&gt;
&lt;p&gt;A conformal ratio is a &lt;strong&gt;conformal&lt;/strong&gt; invariant. Given the coordinates of four points on &lt;span class="math"&gt;\(D\)&lt;/span&gt;-dimensional space, a &lt;strong&gt;conformal ratio&lt;/strong&gt; is defined as
&lt;/p&gt;
&lt;div class="math"&gt;$$C(1, 2, 3, 4) = \frac{(x_{1} - x_{3})^{2} (x_{2} - x_{4})^{2}}{(x_{2} - x_{3})^{2} (x_{1} - x_{4})^{2}} ,$$&lt;/div&gt;
&lt;p&gt;
where &lt;span class="math"&gt;\((x_{1} - x_{3})^{2}\)&lt;/span&gt; means the square of the magnitude of the &lt;span class="math"&gt;\(D\)&lt;/span&gt;-dimensional vector &lt;span class="math"&gt;\(x_{1} - x_{3}\)&lt;/span&gt;. In some sense, after a change of basis, the cross-ratio is the square root of a conformal ratio in two dimensions.&lt;/p&gt;
&lt;p&gt;Again you encounter the arbitrariness of which of the &lt;span class="math"&gt;\(4! = 24\)&lt;/span&gt; permutations to use for the definition of a conformal ratio. Just like the cross-ratio, you find that a conformal ratio is invariant under the exchange of two pairs of coordinates. So again you find six inequivalent classes. However, unlike the cross-ratio, you find that fixing the value of the conformal ratio for one class does not fix the other five classes:
&lt;/p&gt;
&lt;div class="math"&gt;$$C(1, 2, 3, 4) = u \quad C(1, 2, 4, 3) = \frac{1}{u} \quad C(1, 3, 4, 2) = \frac{1}{v} \quad C(1, 3, 2, 4) = v \quad C(1, 4, 3, 2) = \frac{u}{v} \quad C(1, 4, 2, 3) = \frac{v}{u} .$$&lt;/div&gt;
&lt;p&gt;
Indeed, now you have &lt;strong&gt;two&lt;/strong&gt; independent conformal ratios for a given quartet of coordinates.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="conformal symmetry"></category></entry><entry><title>Points in Space</title><link href="http://meirizarrygelpi.github.io/posts/2014/May/points-in-space/" rel="alternate"></link><updated>2014-05-02T00:00:00-04:00</updated><author><name>M.E. Irizarry-Gelpí</name></author><id>tag:meirizarrygelpi.github.io,2014-05-02:posts/2014/May/points-in-space/</id><summary type="html">&lt;p&gt;Consider &lt;span class="math"&gt;\(N\)&lt;/span&gt; distinct points &lt;span class="math"&gt;\(P_{1}\)&lt;/span&gt;, &lt;span class="math"&gt;\(P_{2}\)&lt;/span&gt;, ..., &lt;span class="math"&gt;\(P_{N}\)&lt;/span&gt; with coordinates &lt;span class="math"&gt;\(x_{1}\)&lt;/span&gt;, &lt;span class="math"&gt;\(x_{2}\)&lt;/span&gt;, ..., &lt;span class="math"&gt;\(x_{N}\)&lt;/span&gt;. One can draw &lt;span class="math"&gt;\(N^{2}\)&lt;/span&gt; lines connecting these &lt;span class="math"&gt;\(N\)&lt;/span&gt; points. If we ommit lines that connect a point to itself, then we have &lt;span class="math"&gt;\(N(N-1)/2\)&lt;/span&gt; possible distinct lines. Out of these, &lt;span class="math"&gt;\(N\)&lt;/span&gt; can be regarded as external lines (corresponding to the edges of a convex polygonal perimeter connecting the &lt;span class="math"&gt;\(N\)&lt;/span&gt; points) and &lt;span class="math"&gt;\(N(N - 3)/2\)&lt;/span&gt; can be regarded as internal lines (the lines inside the perimeter).&lt;/p&gt;
&lt;p&gt;We start with &lt;span class="math"&gt;\(N\)&lt;/span&gt; distinct position variables. One can imagine making a change of variables&lt;/p&gt;
&lt;div class="math"&gt;$$(x_{1}, x_{2}, ..., x_{N}) \longrightarrow (X, x_{ij})$$&lt;/div&gt;
&lt;p&gt;where &lt;span class="math"&gt;\(X\)&lt;/span&gt; describes the center-of-mass position of the system, and the &lt;span class="math"&gt;\(x_{ij}\)&lt;/span&gt; variables represent a set of &lt;span class="math"&gt;\(N - 1\)&lt;/span&gt; independent coordinate differences &lt;span class="math"&gt;\(x_{ij} \equiv x_{i} - x_{j}\)&lt;/span&gt;. One can construct more than &lt;span class="math"&gt;\(N - 1\)&lt;/span&gt; coordinate differences, but it is only possible to have &lt;span class="math"&gt;\(N - 1\)&lt;/span&gt; linearly independent ones. Indeed, one can write&lt;/p&gt;
&lt;div class="math"&gt;$$N - 1 = \frac{N(N-1)}{2} + N - 1 - \frac{N(N-1)}{2}$$&lt;/div&gt;
&lt;p&gt;which can be rewritten as&lt;/p&gt;
&lt;div class="math"&gt;$$N - 1 = \frac{N(N-1)}{2} - \frac{(N - 2)(N - 1)}{2}$$&lt;/div&gt;
&lt;p&gt;So if we want to keep all possible &lt;span class="math"&gt;\(N(N-1)/2\)&lt;/span&gt; coordinate differences available, we need to introduce &lt;span class="math"&gt;\((N-2)(N-1)/2\)&lt;/span&gt; auxilliary variables (i.e. Lagrange multipliers) that enforce the linear constraints that leave only &lt;span class="math"&gt;\(N-1\)&lt;/span&gt; linearly-independent ones.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }
    
    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript'; 
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="combinatorics"></category><category term="graph theory"></category></entry></feed>