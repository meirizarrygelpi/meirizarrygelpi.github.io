<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>M.E. Irizarry-Gelpí - Data</title><link href="https://meirizarrygelpi.github.io/" rel="alternate"></link><link href="https://meirizarrygelpi.github.io/feeds/data.atom.xml" rel="self"></link><id>https://meirizarrygelpi.github.io/</id><updated>2018-07-17T16:18:20-04:00</updated><entry><title>Descriptive Statistics of NY Lottery Data</title><link href="https://meirizarrygelpi.github.io/posts/data/descriptive-statistics-of-ny-lottery-data/" rel="alternate"></link><published>2018-07-17T16:18:20-04:00</published><updated>2018-07-17T16:18:20-04:00</updated><author><name>M.E. Irizarry-Gelpí</name></author><id>tag:meirizarrygelpi.github.io,2018-07-17:/posts/data/descriptive-statistics-of-ny-lottery-data/</id><summary type="html">&lt;p&gt;Reviewing some concepts while describing NYS lottery data.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am going to use four data sets to review descriptive statistics. Each data set contains winning numbers for a particular lottery in the State of New York. I got the data from &lt;a href="https://data.ny.gov/"&gt;data.ny.gov&lt;/a&gt;. Here is the list of data sets:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lotto: 1,750 drawings between 09/2001 and 06/2018&lt;/li&gt;
&lt;li&gt;Pick 10: 11,456 drawings between 01/1987 and 06/2018&lt;/li&gt;
&lt;li&gt;Quick Draw: 702,625 drawings between 01/2013 and 06/2018&lt;/li&gt;
&lt;li&gt;Take 5: 7,745 drawings between 01/1992 and 06/2018&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What a great way to spend a Friday the 13th.&lt;/p&gt;
&lt;h2&gt;Lottery Drawings&lt;/h2&gt;
&lt;p&gt;Each of the four lotteries has a different kind of drawing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lotto: Draw 6 numbers without replacement (1 to 59)&lt;/li&gt;
&lt;li&gt;Pick 10: Draw 20 numbers without replacement (1 to 80)&lt;/li&gt;
&lt;li&gt;Quick Draw: Draw 20 numbers without replacement (1 to 80)&lt;/li&gt;
&lt;li&gt;Take 5: Draw 5 numbers without replacement (1 to 39)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A given lottery consists of a draw of &lt;span class="math"&gt;\(n\)&lt;/span&gt; objects without replacement from a population of &lt;span class="math"&gt;\(N\)&lt;/span&gt; distinct objects. In a fair lottery, each object has an equal chance of being drawn.&lt;/p&gt;
&lt;h3&gt;Hypergeometric Distribution&lt;/h3&gt;
&lt;p&gt;The hypergeometric distribution is used when drawing without replacement. Let me first consider the simplest case. You have two kinds of objects: red and blue. Consider a population of size &lt;span class="math"&gt;\(N\)&lt;/span&gt; with &lt;span class="math"&gt;\(R\)&lt;/span&gt; of these being red and &lt;span class="math"&gt;\(N - R\)&lt;/span&gt; being blue. You make a sample of size &lt;span class="math"&gt;\(n\)&lt;/span&gt;. What is the probability that there are &lt;span class="math"&gt;\(r\)&lt;/span&gt; red objects and &lt;span class="math"&gt;\(n - r\)&lt;/span&gt; blue objects? Out of &lt;span class="math"&gt;\(N\)&lt;/span&gt; possible objects, the number of possible samples &lt;span class="math"&gt;\(\mathcal{N}_{n}\)&lt;/span&gt; of size &lt;span class="math"&gt;\(n\)&lt;/span&gt; is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    \mathcal{N}_{n} = {N \choose n} = \frac{\Gamma(N+1)}{\Gamma(n+1)\Gamma(N - n + 1)}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Similarly, out of &lt;span class="math"&gt;\(R\)&lt;/span&gt; red objects, the number of possible samples &lt;span class="math"&gt;\(\mathcal{N}_{r}\)&lt;/span&gt; of size &lt;span class="math"&gt;\(r\)&lt;/span&gt; is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    \mathcal{N}_{r} = {R \choose r} = \frac{\Gamma(R+1)}{\Gamma(r+1)\Gamma(R - r + 1)}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
For each of these &lt;span class="math"&gt;\(\mathcal{N}_{r}\)&lt;/span&gt; ways of choosing &lt;span class="math"&gt;\(r\)&lt;/span&gt; red objects you have &lt;span class="math"&gt;\(\mathcal{N}_{n-r}\)&lt;/span&gt; ways of choosing &lt;span class="math"&gt;\(n-r\)&lt;/span&gt; blue objects:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    \mathcal{N}_{n-r} = {N-R \choose n-r} = \frac{\Gamma(N-R+1)}{\Gamma(n-r+1)\Gamma(N-R - n+r + 1)}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Thus, the probability that a drawing of &lt;span class="math"&gt;\(n\)&lt;/span&gt; objects has &lt;span class="math"&gt;\(r\)&lt;/span&gt; red ones is given by
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    P(n, r, R, N) = \frac{\mathcal{N}_{r} \times \mathcal{N}_{n-r}}{\mathcal{N}_{n}} = \frac{ \Gamma(R + 1) \Gamma(N - R + 1) \Gamma(n + 1) \Gamma(N - n + 1) }{\Gamma(r + 1) \Gamma(R - r + 1) \Gamma(n - r + 1) \Gamma(N - R - n + r + 1) \Gamma(N + 1)}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Note that
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    \sum_{r = 0}^{R} P(n, r, R, N) = 1
\end{equation*}&lt;/div&gt;
&lt;p&gt;
That is, the sum of the probabilities is normalized.&lt;/p&gt;
&lt;p&gt;Consider the special case &lt;span class="math"&gt;\(R = 1\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    P(n, r, 1, N) = \frac{ \Gamma(2) \Gamma(N) \Gamma(n + 1) \Gamma(N - n + 1) }{\Gamma(r + 1) \Gamma(2 - r) \Gamma(n - r + 1) \Gamma(N - n + r) \Gamma(N + 1)}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Then the sample either has the good object (&lt;span class="math"&gt;\(r = 1\)&lt;/span&gt;) or it does not (&lt;span class="math"&gt;\(r = 0\)&lt;/span&gt;). You have
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    P(n, 0, 1, N) = \frac{ \Gamma(2) \Gamma(N) \Gamma(n + 1) \Gamma(N - n + 1) }{\Gamma(1) \Gamma(2) \Gamma(n + 1) \Gamma(N - n) \Gamma(N + 1)} = \frac{N - n}{N}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
or
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    P(n, 1, 1, N) = \frac{ \Gamma(2) \Gamma(N) \Gamma(n + 1) \Gamma(N - n + 1) }{\Gamma(2) \Gamma(1) \Gamma(n) \Gamma(N - n + 1) \Gamma(N + 1)} = \frac{n}{N}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
That is, the probability for a given member of the &lt;span class="math"&gt;\(N\)&lt;/span&gt;-population to appear in the &lt;span class="math"&gt;\(n\)&lt;/span&gt;-sample is the corresponding fraction of the population. Another special case is &lt;span class="math"&gt;\(R = r = k\)&lt;/span&gt; with &lt;span class="math"&gt;\(1 \leq k \leq n \leq N\)&lt;/span&gt;:
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    P(n, k, k, N) = \prod_{j = 0}^{k-1} \frac{n - j}{N - j}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
This is the familiar sampling-without-replacement probability.&lt;/p&gt;
&lt;p&gt;Instead of good and bad objects, you have winning and non-winning numbers. Out of the &lt;span class="math"&gt;\(N\)&lt;/span&gt; numbers, only &lt;span class="math"&gt;\(n\)&lt;/span&gt; are winning numbers. So the probability of drawing &lt;span class="math"&gt;\(n\)&lt;/span&gt; numbers and all of them being winning numbers is given by
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    P(n, N) = \prod_{j = 0}^{n-1} \frac{n - j}{N - j}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
For the &lt;strong&gt;Lotto&lt;/strong&gt; you have
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    P(6, 59) = \frac{6 \times 5 \times 4 \times 3 \times 2 \times 1}{59 \times 58 \times 57 \times 56 \times 55 \times 54} = \frac{1}{45,057,474}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Similarly, for &lt;strong&gt;Take 5&lt;/strong&gt; you have
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    P(5, 39) = \frac{5 \times 4 \times 3 \times 2 \times 1}{39 \times 38 \times 37 \times 36 \times 35} = \frac{1}{575,757}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
For &lt;strong&gt;Pick 10&lt;/strong&gt;, you draw 20 numbers (out of 80) but only match 10. That is, you need to draw all 10 winning numbers besides 10 loosing numbers. The probability for this is
&lt;/p&gt;
&lt;div class="math"&gt;\begin{equation*}
    {80 - 10 \choose 20 - 10} / {80 \choose 20} = \frac{49,588,065,527}{441,914,517,776,521,792} \approx \frac{1}{8,911,711}
\end{equation*}&lt;/div&gt;
&lt;p&gt;
Note that these three probabilities are for the case of winning the jackpot.&lt;/p&gt;
&lt;h2&gt;NYS Lotto&lt;/h2&gt;
&lt;p&gt;You can load the data into a Pandas &lt;code&gt;DataFrame&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ny-lotto.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The Lotto data consists of 1,750 records with four columns:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Draw Date&lt;/li&gt;
&lt;li&gt;Winning Numbers&lt;/li&gt;
&lt;li&gt;Bonus&lt;/li&gt;
&lt;li&gt;Extra&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am going to ignore the Draw Date. The Winning Numbers column has &lt;strong&gt;string&lt;/strong&gt; values. The Bonus and Extra columns each have integer values. However, the Extra column only has 339 non-zero values.&lt;/p&gt;
&lt;h3&gt;Extra Column&lt;/h3&gt;
&lt;p&gt;You can extract the Extra column from the full dataframe:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;extra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last line drops the records with missing values. A quick description is found with &lt;code&gt;.describe()&lt;/code&gt;. From this you learn that the &lt;strong&gt;mean&lt;/strong&gt; value is a bit over 31, which makes sense since the range of possible values is from 1 to 59. The minimum is 1, and the maximum is 59, which confirms that these two values were drawn at least once. More tellingly, the quartiles are close to where you expect them: 25%-quartile is between 16 and 17; 50%-quartile is 31; and the 75%-quartile is 47. If the desire is that this draw is fair and each of the 59 values is equally likely, then these statistics are promising. But due to the small size of the data, a bar chart with the counts is not very uniform:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Extra" src="/images/ny-lottery/lotto-extra-bar.png"&gt;&lt;/p&gt;
&lt;p&gt;Although a few values appear less often as most values, I am not going to conclude there was any bias.&lt;/p&gt;
&lt;h3&gt;Bonus Column&lt;/h3&gt;
&lt;p&gt;You can extract the Bonus column from the full dataframe:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bonus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;bonus&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bonus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bonus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Unlike the Extra column, there are no missing values in the Bonus column. A quick description is found with &lt;code&gt;.describe()&lt;/code&gt;. From this you learn that the &lt;strong&gt;mean&lt;/strong&gt; value is a bit over 30, which makes sense since the range of possible values is from 1 to 59. The minimum is 1, and the maximum is 59, which confirms that these two values were drawn at least once. More tellingly, the quartiles are right where you expect them: 25%-quartile is 15; 50%-quartile is 30; and the 75%-quartile is 45. If the desire is that this draw is fair and each of the 59 values is equally likely, then these statistics are promising. Since you have 1,750 records, the bar chart with counts is more uniform:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bonus" src="/images/ny-lottery/lotto-bonus-bar.png"&gt;&lt;/p&gt;
&lt;p&gt;It is interesting that a number close to 50 has a higher count in both the Extra and Bonus columns.&lt;/p&gt;
&lt;h3&gt;Winning Numbers&lt;/h3&gt;
&lt;p&gt;The data in the Winning Numbers column needs to be transformed a bit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Winning Numbers&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;wn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;wn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This takes you from a string with six numbers to a list with six &lt;code&gt;int&lt;/code&gt; values. In order to put each number drawn in its own column, I used the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wn&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])):&lt;/span&gt;
    &lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first thing you can do is get the quick description with &lt;code&gt;.describe()&lt;/code&gt;. But you find something interesting: There appears to be a bias in each drawing! For example, in the first drawing the mean is between 8 and 9, and the maximum is 41. Here is a bar chart with counts:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/lotto-winning-bar-1.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/lotto-winning-bar-2.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/lotto-winning-bar-3.png"&gt;&lt;/p&gt;
&lt;p&gt;I am using Altair to produce these plots:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;altair&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;alt&lt;/span&gt;

&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;column&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;quantitative&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aggregate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;count&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;quantitative&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The bias is due to the fact that each sequence of winning numbers is &lt;strong&gt;sorted&lt;/strong&gt;. I wish I could understand this bias better. It seems to be related to a &lt;a href="https://en.wikipedia.org/wiki/Noncentral_hypergeometric_distributions"&gt;noncentral hypergeometric distribution&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;NYS Take 5&lt;/h2&gt;
&lt;p&gt;Similar steps can be taken with the Take 5 data. Here you have five winning numbers ranging from 1 to 39. Again, the winning numbers are sorted, so the bar charts with counts show a bias:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/take-5-0-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/take-5-1-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/take-5-2-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/take-5-3-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/take-5-4-bar.png"&gt;&lt;/p&gt;
&lt;p&gt;Since you have much more data than the Lotto data, the charts look smoother.&lt;/p&gt;
&lt;h2&gt;NYS Quick Draw&lt;/h2&gt;
&lt;p&gt;Here you have a drawing of 20 numbers ranging from 1 to 80. Again, the winning numbers are sorted, so the bar charts with the counts show a bias:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-0-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-1-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-2-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-3-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-4-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-5-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-6-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-7-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-8-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-9-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-10-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-11-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-12-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-13-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-14-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-15-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-16-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-17-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-18-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/quick-draw-19-bar.png"&gt;&lt;/p&gt;
&lt;p&gt;There are 702,625 records, so the charts are even smoother than the Lotto and Take 5 cases.&lt;/p&gt;
&lt;h2&gt;NYS Pick 10&lt;/h2&gt;
&lt;p&gt;In a similar way, you can see the sorting bias in the Pick 10 data:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-0-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-1-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-2-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-3-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-4-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-5-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-6-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-7-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-8-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-9-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-10-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-11-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-12-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-13-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-14-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-15-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-16-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-17-bar.png"&gt;
&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-18-bar.png"&gt;&lt;img alt="Winning Numbers" src="/images/ny-lottery/pick-10-19-bar.png"&gt;&lt;/p&gt;
&lt;p&gt;Here, you only have 11,456 records.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="pandas"></category><category term="altair"></category><category term="NY"></category></entry><entry><title>Analyzing the New York Lotto</title><link href="https://meirizarrygelpi.github.io/posts/data/analyzing-the-new-york-lotto/" rel="alternate"></link><published>2018-06-29T00:00:00-04:00</published><updated>2018-06-29T00:00:00-04:00</updated><author><name>M.E. Irizarry-Gelpí</name></author><id>tag:meirizarrygelpi.github.io,2018-06-29:/posts/data/analyzing-the-new-york-lotto/</id><summary type="html">&lt;p&gt;A quick statistical analysis of the New York Lotto.&lt;/p&gt;</summary><content type="html">&lt;p&gt;The State of New York has a &lt;a href="https://data.ny.gov/"&gt;website&lt;/a&gt; where you can find data produced by the state. Today I am going to use &lt;a href="https://pandas.pydata.org/"&gt;Pandas&lt;/a&gt; to explore a data set for the winning numbers of the New York Lotto. This is a lottery where six numbers are drawn (each between 1 and 59), followed by a bonus draw of a single number (also between 1 and 59).&lt;/p&gt;
&lt;p&gt;The data file I have goes from 09/12/2001 to 06/20/2018 and it contains 1750 rows and 4 columns. First, you import Pandas and load the data into a &lt;code&gt;pd.DataFrame&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ny-lotto.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Using &lt;code&gt;.head()&lt;/code&gt; gives you a short summary of the first five records. There is a column with the draw date (when the numbers where drawn), a column &lt;code&gt;Winning Numbers&lt;/code&gt; with the six winning numbers (as a string), a column &lt;code&gt;Bonus #&lt;/code&gt; with the bonus draw, and a column &lt;code&gt;Extra #&lt;/code&gt; with an extra draw (which I do not understand).&lt;/p&gt;
&lt;p&gt;You can rename some of the columns with &lt;code&gt;.rename&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bonus #&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Bonus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Extra #&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can use &lt;code&gt;.describe()&lt;/code&gt; to get a short description of the data. Here you learn that, out of the 1750 records, only 339 have a valid value in the &lt;code&gt;Extra&lt;/code&gt; column. The statistics are encouraging: the mean value in both the &lt;code&gt;Bonus&lt;/code&gt; and &lt;code&gt;Extra&lt;/code&gt; column is between 30 and 32. The minimum and maximum values in both columns are 1 and 59, which means that at least these two numbers have been drawn in both cases. In the &lt;code&gt;Bonus&lt;/code&gt; column, the first, second, and third quartiles are 15, 30, and 45, which suggests a uniform distribution. In the &lt;code&gt;Extra&lt;/code&gt; column, the first, second, and third quartiles are 16.5, 31, and 47.&lt;/p&gt;
&lt;p&gt;You can extract the &lt;code&gt;Bonus&lt;/code&gt; column as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bonus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;bonus&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bonus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bonus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;bonus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bonus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first line initializes an empty &lt;code&gt;pd.DataFrame&lt;/code&gt;. The second line adds a column to &lt;code&gt;bonus&lt;/code&gt; from &lt;code&gt;df&lt;/code&gt;. The third line adds a column called &lt;code&gt;index&lt;/code&gt;. The data in this column can be visualized via&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bonus&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bonus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Similar steps can be taken with the &lt;code&gt;Extra&lt;/code&gt; column:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;extra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropna&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;extra&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;plot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scatter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, the third line drops all of the rows with &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You can use &lt;a href="https://altair-viz.github.io/"&gt;Altair&lt;/a&gt; for visualization:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;altair&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;alt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For example, with the &lt;code&gt;Bonus&lt;/code&gt; column you have:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bonus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_circle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bonus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I encountered a problem when plotting the data in the &lt;code&gt;Extra&lt;/code&gt; column, and solved that problem with the following code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_circle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;quantitative&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You get the following two graphs:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bonus" src="/images/ny-lotto/bonus.png"&gt; &lt;img alt="Extra" src="/images/ny-lotto/extra.png"&gt;&lt;/p&gt;
&lt;p&gt;As you can tell, these scatter plots appear to be uniformly distributed, which is what you would expect for a fair lottery.&lt;/p&gt;
&lt;p&gt;Another visualization tool is &lt;a href="https://seaborn.pydata.org/"&gt;Seaborn&lt;/a&gt;. You can use Seaborn to great scatter plots with histograms:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;sns&lt;/span&gt;

&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jointplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bonus&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;bonus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;sns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jointplot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;extra&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again, these histograms show that the distribution is almost uniform. In a future post I will look at the winning numbers.&lt;/p&gt;</content><category term="pandas"></category><category term="NY"></category></entry></feed>